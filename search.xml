<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于VueJS实现音乐播放器</title>
    <url>/2021/03/03/%E5%9F%BA%E4%BA%8EVueJS%E5%AE%9E%E7%8E%B0%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文旨在记录一下我对于在前端使用<code>Vue</code>搭建本项目的过程中所使用到的技术进行归纳与总结。本文供我在以后的使用中能够快速学习和参考同时也希望能够给大家带来帮助。</p>
<p>本项目托管于<a href="https://gitee.com/hei_girls/vue-player">Gitee</a>。</p>
<p>本项目是基于<code>vue+axios</code>，开发实现页面音乐播放器。在制作本项目之前，需要掌握如下知识：</p>
<span id="more"></span>

<p><strong>所需知识：</strong></p>
<ol>
<li><p><code>HTML</code></p>
</li>
<li><p><code>CSS</code></p>
</li>
<li><p><code>JavaScript</code></p>
</li>
<li><p><code>Ajax</code></p>
</li>
</ol>
<p><strong>开发工具：</strong></p>
<p><a href="https://code.visualstudio.com/">VSCode工具下载</a></p>
<h1 id="播放器功能介绍"><a href="#播放器功能介绍" class="headerlink" title="播放器功能介绍"></a>播放器功能介绍</h1><ol>
<li>在输入框输入<code>歌手/歌曲</code>按下回车键，会在左侧会返回搜索到的结果</li>
<li>点击某首歌的播放按钮，中间CD唱片区域会展示封面信息并且会有动画产生，同时下方开始播放对应的歌曲，且在右侧评论区域，会有用户对当前歌曲的评论进行展示</li>
<li>当点击下方音乐暂停键时，中间CD唱片动画也会暂停，当再次点击时，会继续进行播放，且中间CD唱片动画也会开启</li>
<li>在左侧返回的搜索结果中会出现MV图片，并不是每首歌曲都会有MV图片，这个需要根据后台接口中的<code>mvid</code>返回的结果来判断</li>
<li>当点击MV图片时，会弹出遮罩层，并且会弹出MV界面。点击弹出的MV播放按钮，会自动播放，点击暂停会暂停播放，当点击除了MV区域外的任意区域，MV播放会消失，同时遮罩层也会消失，并且无论当前MV是否正在播放，MV都会暂停</li>
</ol>
<p><strong>实现功能总结：</strong></p>
<ol>
<li>歌曲搜索功能</li>
<li>歌曲播放功能</li>
<li>歌曲封面动画及效果</li>
<li>歌曲评论展示</li>
<li>播放动画同步</li>
<li>MV播放</li>
</ol>
<h1 id="逐步实现每个功能"><a href="#逐步实现每个功能" class="headerlink" title="逐步实现每个功能"></a>逐步实现每个功能</h1><h2 id="歌曲搜索功能"><a href="#歌曲搜索功能" class="headerlink" title="歌曲搜索功能"></a>歌曲搜索功能</h2><p>输出关键字，回车，返回数据列表，所以需要使用数组来接收数据。</p>
<ol>
<li>按下回车(<code>v-on.enter</code>)</li>
<li>查询数据(<code>axios接口v-model</code>)</li>
<li>渲染数据(<code>v-for结合获取到的数组</code>)</li>
</ol>
<p><strong>歌曲搜索接口文档：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请求地址：</span></span><br><span class="line">https://autumnfish.cn/search</span><br><span class="line"><span class="comment"># 请求方式：</span></span><br><span class="line">get</span><br><span class="line"><span class="comment"># 请求参数：</span></span><br><span class="line">keywords(查询的关键字)</span><br><span class="line"><span class="comment"># 响应内容：</span></span><br><span class="line">歌曲搜索结果</span><br></pre></td></tr></table></figure>

<p><span style="color:red;"><strong>注意事项：</strong></span></p>
<ol>
<li>在<code>axios</code>中的<code>this</code>指向问题。可以在<code>axios</code>调用接口之前声明一个<code>var that = this;</code>来保存<code>this</code>的值</li>
<li>通过<code>get</code>请求的数据，需要在请求地址后面进行拼接参数</li>
<li>服务器返回的数据比较复杂时，获取的时候需要注意层级结构</li>
<li>可以通过审查元素快速定位到需要操作的元素上</li>
</ol>
<h2 id="歌曲播放功能"><a href="#歌曲播放功能" class="headerlink" title="歌曲播放功能"></a>歌曲播放功能</h2><p>播放歌曲时，本质就是设置了<code>audio</code>中的<code>src</code>地址。当切换歌曲播放时，其本质是更换了<code>audio</code>中不同的<code>src</code>地址。</p>
<ol>
<li>点击播放歌曲(<code>v-on</code>自定义参数)</li>
<li>歌曲地址获取(<code>根据接口传递过来的歌曲id</code>)</li>
<li>歌曲地址设置(<code>v-bind动态绑定src地址</code>)</li>
</ol>
<p><strong>歌曲url获取文档：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请求地址：</span></span><br><span class="line">https://autumnfish.cn/song/url</span><br><span class="line"><span class="comment"># 请求方式：</span></span><br><span class="line">get</span><br><span class="line"><span class="comment"># 请求参数：</span></span><br><span class="line">id(歌曲id)</span><br><span class="line"><span class="comment"># 响应内容</span></span><br><span class="line">歌曲的url地址</span><br></pre></td></tr></table></figure>

<p><span style="color:red;"><strong>注意事项：</strong></span></p>
<ol>
<li>在<code>axios</code>中的<code>this</code>指向问题。可以在<code>axios</code>调用接口之前声明一个<code>var that = this;</code>来保存<code>this</code>的值</li>
<li>通过<code>get</code>请求的数据，需要在请求地址后面进行拼接参数</li>
<li><code>歌曲id</code>依赖歌曲搜索的结果，对于不用的数据也要关注</li>
</ol>
<h2 id="歌曲封面展示"><a href="#歌曲封面展示" class="headerlink" title="歌曲封面展示"></a>歌曲封面展示</h2><p>在播放歌曲时，其本质是改变了<code>img</code>标签中的<code>src</code>属性的值。</p>
<ol>
<li>点击播放按钮(只需在播放歌曲<code>3.2</code>内部声明的函数中调用接口即可)</li>
<li>歌曲封面获取</li>
<li>歌曲封面设置</li>
</ol>
<p><strong>歌曲详情获取文档：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请求地址：</span></span><br><span class="line">https://autumnfish.cn/song/detail</span><br><span class="line"><span class="comment"># 请求方式：</span></span><br><span class="line">get</span><br><span class="line"><span class="comment"># 请求参数：</span></span><br><span class="line">ids(歌曲id)</span><br><span class="line"><span class="comment"># 响应内容</span></span><br><span class="line">歌曲详情，包含封面信息</span><br></pre></td></tr></table></figure>

<p><span style="color:red;"><strong>注意事项：</strong></span></p>
<ol>
<li>在<code>axios</code>中的<code>this</code>指向问题。可以在<code>axios</code>调用接口之前声明一个<code>var that = this;</code>来保存<code>this</code>的值</li>
<li>通过<code>get</code>请求的数据，需要在请求地址后面进行拼接参数</li>
<li>在<code>vue</code>中通过<code>v-bind</code>操作属性</li>
<li>本地无法获取的数据，基本都会偶遇对应的接口</li>
</ol>
<h2 id="歌曲评论"><a href="#歌曲评论" class="headerlink" title="歌曲评论"></a>歌曲评论</h2><p>点击某个歌曲，对应的评论会渲染到右侧中。因为评论数据很多，所以使用数组进行存储。</p>
<ol>
<li>点击播放(只需在播放歌曲<code>3.2</code>内部声明的函数中调用接口即可)</li>
<li>歌曲评论获取(接口 歌曲ids)</li>
<li>歌曲评论渲染(<code>v-for</code>)</li>
</ol>
<p><strong>热门评论获取文档：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请求地址：</span></span><br><span class="line">https://autumnfish.cn/comment/hot?<span class="built_in">type</span>=0</span><br><span class="line"><span class="comment"># 请求方式：</span></span><br><span class="line">get</span><br><span class="line"><span class="comment"># 请求参数：</span></span><br><span class="line">id(歌曲id，<span class="built_in">type</span>固定为0) =&gt; <span class="built_in">type</span>=0&amp;&amp;id=</span><br><span class="line"><span class="comment"># 响应内容</span></span><br><span class="line">歌曲的热门评论</span><br></pre></td></tr></table></figure>

<p><span style="color:red;"><strong>注意事项：</strong></span></p>
<ol>
<li>在<code>axios</code>中的<code>this</code>指向问题。可以在<code>axios</code>调用接口之前声明一个<code>var that = this;</code>来保存<code>this</code>的值</li>
<li>通过<code>get</code>请求的数据，需要在请求地址后面进行拼接参数</li>
<li>在<code>vue</code>中通过<code>v-for</code>生成列表</li>
</ol>
<h2 id="播放动画"><a href="#播放动画" class="headerlink" title="播放动画"></a>播放动画</h2><p>播放音乐时，增加类名，暂停音乐时，移除类名，需要进行判断。<code>play</code>和<code>pause</code>都是固定写法。只是单纯的操作播放、暂停，所以不需要调用接口。</p>
<ol>
<li>监听音乐播放(<code>v-on:play事件</code>)</li>
<li>监听音乐暂停(<code>v-on:pause事件</code>)</li>
<li>操作类名(<code>v-bind=&quot;对象&quot;</code>因为就两种状态所以是布尔值)</li>
</ol>
<p><span style="color:red;"><strong>注意事项：</strong></span></p>
<ol>
<li>在<code>axios</code>中的<code>this</code>指向问题。可以在<code>axios</code>调用接口之前声明一个<code>var that = this;</code>来保存<code>this</code>的值</li>
<li>通过<code>get</code>请求的数据，需要在请求地址后面进行拼接参数</li>
<li><code>audio</code>标签的<code>play</code>事件会在音频播放的时候触发</li>
<li><code>aduio</code>标签的<code>pause</code>事件会在音频暂停的时候触发</li>
<li>通过<strong>对象</strong>的方式设置类名，类名生效与否取决于后面值得<strong>真假</strong>，为<code>true</code>生效，反之成立</li>
</ol>
<h2 id="MV播放"><a href="#MV播放" class="headerlink" title="MV播放"></a>MV播放</h2><p>播放MV的本质就是给<code>video</code>中的<code>src</code>地址。当切换MV播放时，其本质是更换了<code>video</code>中不同的<code>src</code>地址。并且通过<code>v-show</code>来操作遮罩层的显示、隐藏功能。</p>
<ol>
<li>MV图标显示状态(<code>v-if</code>)</li>
<li>MV地址获取(<code>接口 mvid</code>)</li>
<li>遮罩层(<code>v-show v-on</code>)</li>
<li>MV地址设置(<code>v-bind</code>)</li>
</ol>
<p><strong>MV地址获取文档：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请求地址：</span></span><br><span class="line">https://autumnfish.cn/mv/url</span><br><span class="line"><span class="comment"># 请求方式：</span></span><br><span class="line">get</span><br><span class="line"><span class="comment"># 请求参数：</span></span><br><span class="line">id(mvid，为0说明没有MV)</span><br><span class="line"><span class="comment"># 响应内容</span></span><br><span class="line">MV的地址</span><br></pre></td></tr></table></figure>

<p><span style="color:red;"><strong>注意事项：</strong></span></p>
<ol>
<li>在<code>axios</code>中的<code>this</code>指向问题。可以在<code>axios</code>调用接口之前声明一个<code>var that = this;</code>来保存<code>this</code>的值</li>
<li>通过<code>get</code>请求的数据，需要在请求地址后面进行拼接参数</li>
<li>不同的接口需要的数据是不同的，阅读文档的时候需要仔细</li>
<li>页面结构复杂之后，通过审查元素的方式去快速定位到相应的元素</li>
<li>响应式的数据一定要先在<code>Vue中的data</code>中预先定义，然后用<code>this.定义的属性=传递过来的值</code>来接收</li>
</ol>
<h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><p><strong>HTML代码：</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;play_wrap&quot;</span> <span class="attr">id</span>=<span class="string">&quot;player&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search_bar&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://sm.ms/image/FO95hAIXyZqoHct&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 搜索歌曲 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入要搜索的Music&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;query&#x27;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;searchMusic&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center_con&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 搜索歌曲列表 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;song_wrapper&#x27;</span> <span class="attr">ref</span>=<span class="string">&#x27;song_wrapper&#x27;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;song_list&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in musicList&quot;</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- 点击放歌 --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;playMusic(item.id)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">v-if</span>=<span class="string">&quot;item.mvid != 0&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;playMv(item.mvid)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://i.loli.net/2020/03/23/dor23bhZtIvK17X.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;switch_btn&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 歌曲信息容器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;player_con&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;playing : isPlaying&#125;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://i.loli.net/2020/03/23/gZHko2WlpJNcGPv.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;play_bar&quot;</span> /&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 黑胶碟片 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://i.loli.net/2020/03/23/hQPuH4gNRx7XayI.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;disc autoRotate&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;musicCover&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cover autoRotate&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 评论容器 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comment_wrapper&quot;</span> <span class="attr">ref</span>=<span class="string">&#x27;comment_wrapper&#x27;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&#x27;title&#x27;</span>&gt;</span>热门留言<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;comment_list&#x27;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">v-for</span>=<span class="string">&quot;item in hotComments&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.user.avatarUrl&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span>&#123;&#123; item.nickname &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">dd</span> <span class="attr">class</span>=<span class="string">&quot;detail&quot;</span>&gt;</span>&#123;&#123; item.content &#125;&#125;<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://i.loli.net/2020/03/23/dor23bhZtIvK17X.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;right_line&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;audio_con&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">audio</span> <span class="attr">ref</span>=<span class="string">&#x27;audio&#x27;</span> @<span class="attr">play</span>=<span class="string">&quot;play&quot;</span> @<span class="attr">pause</span>=<span class="string">&quot;pause&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">class</span>=<span class="string">&quot;myaudio&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;musicUrl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;video_con&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">video</span> <span class="attr">ref</span>=<span class="string">&#x27;video&#x27;</span> <span class="attr">:src</span>=<span class="string">&quot;mvUrl&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;closeMv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>CSS代码：</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dd</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;        </span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://i.loli.net/2020/03/23/gz9abCBAcphv6jF.jpg&quot;</span>) no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.play_wrap</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">544px</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">272px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.search_bar</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#1eacda</span>;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">11</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.search_bar</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">23px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.search_bar</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">23px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">296px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">34px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://i.loli.net/2020/03/23/9FeKnVlohsY3krO.png&quot;</span>) <span class="number">265px</span> center no-repeat</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.45</span>);</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center_con</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">435px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">435px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_stretch</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">    <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span>::-webkit-scrollbar &#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">580px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(odd) &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">240</span>, <span class="number">240</span>, <span class="number">240</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;https://i.loli.net/2020/03/23/chJ89uNpofneFrS.png&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span> <span class="selector-tag">li</span> <span class="selector-tag">b</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">122px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_stretch</span> <span class="selector-class">.song_list</span> <span class="selector-tag">li</span> <span class="selector-tag">b</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_stretch</span> <span class="selector-class">.song_list</span> <span class="selector-tag">li</span> <span class="selector-tag">em</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">23px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://i.loli.net/2020/03/23/HFyBnJ5loLhI7qK.png&quot;</span>) left -<span class="number">48px</span> no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.song_list</span> <span class="selector-tag">li</span> <span class="selector-tag">em</span>,<span class="selector-class">.song_list</span> <span class="selector-tag">li</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.player_con</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">435px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.player_con2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">435px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.player_con2</span> <span class="selector-tag">video</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">355px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">265px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.disc</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">73px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cover</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">125px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">112px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">75px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">180px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">435px</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-class">.comment_list</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">410px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-class">.comment_list</span>::-webkit-scrollbar &#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-tag">dl</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-tag">dt</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-tag">dt</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-tag">dd</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-class">.name</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comment_wrapper</span> <span class="selector-class">.detail</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.audio_con</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f3f4</span>;</span><br><span class="line">    <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.myaudio</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f3f4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 旋转的动画 */</span></span><br><span class="line"><span class="keyword">@keyframes</span> Rotate &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">360deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 旋转的类名 */</span></span><br><span class="line"><span class="selector-class">.autoRotate</span> &#123;</span><br><span class="line">    <span class="attribute">animation-name</span>: Rotate;</span><br><span class="line">    <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">    <span class="attribute">animation-play-state</span>: paused;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 是否正在播放 */</span></span><br><span class="line"><span class="selector-class">.player_con</span><span class="selector-class">.playing</span> <span class="selector-class">.disc</span>,</span><br><span class="line"><span class="selector-class">.player_con</span><span class="selector-class">.playing</span> <span class="selector-class">.cover</span> &#123;</span><br><span class="line">    <span class="attribute">animation-play-state</span>: running;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.play_bar</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">25deg</span>);</span><br><span class="line">    <span class="attribute">transform-origin</span>: <span class="number">12px</span> <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 播放杆 转回去 */</span></span><br><span class="line"><span class="selector-class">.player_con</span><span class="selector-class">.playing</span> <span class="selector-class">.play_bar</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 搜索历史列表 */</span></span><br><span class="line"><span class="selector-class">.search_history</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">296px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">23px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">17px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.search_history</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.switch_btn</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right_line</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.video_con</span> <span class="selector-tag">video</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">546px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">273px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">990</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.video_con</span> <span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">980</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.video_con</span> <span class="selector-class">.shutoff</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://i.loli.net/2020/03/23/ZWSChyBwjA5uRfL.png&quot;</span>) no-repeat;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">273px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">995</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>JS代码：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var app = new Vue(&#123;</span><br><span class="line">    el: &#x27;#player&#x27;,</span><br><span class="line">    data: &#123;</span><br><span class="line">        //查询关键字</span><br><span class="line">        query: &#x27;&#x27;,</span><br><span class="line">        //用来存放歌曲的数组</span><br><span class="line">        musicList: [],</span><br><span class="line">        //歌曲url</span><br><span class="line">        musicUrl: &#x27;&#x27;,</span><br><span class="line">        //存储点击歌曲(框内的)对应的封面，初始时定义的封面</span><br><span class="line">        musicCover: &#x27;https://ss2.baidu.com/6ON1bjeh1BF3odCf/it/u=1573435035,3371549610&amp;fm=15&amp;gp=0.jpg&#x27;,</span><br><span class="line">        //存放歌曲评论</span><br><span class="line">        hotComments: [],</span><br><span class="line">        //设置动画初始播放状态</span><br><span class="line">        isPlaying: false,</span><br><span class="line">        //存放mv地址</span><br><span class="line">        mvUrl: &#x27;&#x27;,</span><br><span class="line">        //遮罩层初始状态</span><br><span class="line">        isShow: false</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        //歌曲搜索</span><br><span class="line">        searchMusic:function() &#123;</span><br><span class="line">            var that = this;</span><br><span class="line">            axios.get(&quot;https://autumnfish.cn/search?keywords=&quot; + this.query).then(function(response) &#123;</span><br><span class="line">                // console.log(response.data.result.songs);</span><br><span class="line">                that.musicList = response.data.result.songs;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        //歌曲播放</span><br><span class="line">        playMusic: function(musicId) &#123;</span><br><span class="line">            var that = this;</span><br><span class="line">            // 歌曲url地址</span><br><span class="line">            axios.get(&quot;https://autumnfish.cn/song/url?id=&quot; + musicId).then(function(response) &#123;</span><br><span class="line">                // console.log(response);</span><br><span class="line">                // console.log(response.data.data[0].url);</span><br><span class="line">                that.musicUrl = response.data.data[0].url;</span><br><span class="line">            &#125;)</span><br><span class="line">            // 歌曲封面</span><br><span class="line">            axios.get(&quot;https://autumnfish.cn/song/detail?ids=&quot; + musicId).then(function(response) &#123;</span><br><span class="line">                // console.log(response.data.songs[0]);</span><br><span class="line">                that.musicCover = response.data.songs[0].al.picUrl;</span><br><span class="line">            &#125;) </span><br><span class="line">            // 歌曲评论</span><br><span class="line">            axios.get(&quot;https://autumnfish.cn/comment/hot?type=0&amp;&amp;id=&quot; + musicId).then(function(response) &#123;</span><br><span class="line">                // console.log(response.data.hotComments);</span><br><span class="line">                // console.log(response.data.hotComments[0].content);</span><br><span class="line">                // console.log(response.data.hotComments[0].user.avatarUrl);</span><br><span class="line">                that.hotComments = response.data.hotComments;</span><br><span class="line">            &#125;)        </span><br><span class="line">        &#125;,</span><br><span class="line">        //歌曲播放</span><br><span class="line">        play: function() &#123;</span><br><span class="line">            // console.log(&#x27;play&#x27;);</span><br><span class="line">            this.isPlaying = true;</span><br><span class="line">        &#125;,</span><br><span class="line">        //歌曲暂停</span><br><span class="line">        pause: function() &#123;</span><br><span class="line">            this.isPlaying = false;</span><br><span class="line">        &#125;,</span><br><span class="line">        //播放mv</span><br><span class="line">        playMv: function(mvid) &#123;</span><br><span class="line">            var that = this;</span><br><span class="line">            console.log(mvid);</span><br><span class="line">            axios.get(&quot;https://autumnfish.cn/mv/url?id=&quot; + mvid).then(function(response) &#123;</span><br><span class="line">                // console.log(response.data.data.url);</span><br><span class="line">                that.isShow = true;</span><br><span class="line">                that.mvUrl = response.data.data.url;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        //隐藏播放</span><br><span class="line">        closeMv: function() &#123;</span><br><span class="line">            this.isShow = false;</span><br><span class="line">            this.mvUrl = &#x27;&#x27;;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo+Github创建个人博客</title>
    <url>/2021/01/30/%E5%9F%BA%E4%BA%8EHexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文旨在记录一下我通过搭建<code>Hexo </code>个人博客，并将其部署在<code>Github</code>上面的过程中遇到的问题记录下来，也供我在以后的使用中能够快速学习和参考同时也希望能够给大家带来帮助。需要看更详细或者官方文档的可以点击<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>进行查看.。</p>
<p><strong>Hexo安装前提：</strong></p>
<span id="more"></span>

<p>安装<code>Hexo</code>非常简单，但是在安装<code>Hexo</code>之前，我们需要预先：</p>
<ol>
<li>安装<code>Node.js</code></li>
<li>安装<code>Git</code></li>
<li>注册<code>Github</code>账号</li>
<li>配置<code>SSH</code></li>
</ol>
<h1 id="Node安装"><a href="#Node安装" class="headerlink" title="Node安装"></a><code>Node</code>安装</h1><p><a href="https://nodejs.org/en/">Nodejs安装</a></p>
<p><a href="https://blog.csdn.net/qq_44711209/article/details/109923133">安装教程及环境配置</a></p>
<p><strong>查看是否安装成功Node或安装过Node：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果出现版本号，则说明node安装成功</span></span><br><span class="line">node -v</span><br><span class="line"><span class="comment"># 如果出现版本号，则说明npm也安装成功</span></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p><img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_19-11-10.png" alt="Snipaste_2021-05-29_19-11-10"></p>
<p><strong>cnpm 设置</strong><br><code>npm</code> 使用起来可能比较慢，因为它的仓库服务器在国外。在国内可以用淘宝开发的 cnpm来代替，它是 npm 的镜像。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<h1 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a><code>Git</code>安装</h1><p><a href="https://git-scm.com/downloads">Git官网下载</a></p>
<p><a href="https://www.cnblogs.com/ximiaomiao/p/7140456.html">Git安装与使用教程</a></p>
<p><strong>查看<code>Git</code>是否安装成功：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p><img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_20-01-24.png" alt="Snipaste_2021-05-29_20-01-24"></p>
<h1 id="Github注册及创建仓库"><a href="#Github注册及创建仓库" class="headerlink" title="Github注册及创建仓库"></a><code>Github</code>注册及创建仓库</h1><p><a href="https://github.com/">Github官网</a></p>
<p><a href="https://www.cnblogs.com/cxq0017/p/9636083.html">查看注册教程</a></p>
<p>如果有<code>Github</code>账号请略过。</p>
<p><strong>注意：</strong><span style="color:red;">我们创建的仓库名必须叫<code>用户名.github.io</code>。我的仓库名是：<code>coderapg.github.io</code>。</span></p>
<p><img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_23-47-19.png" alt="Snipaste_2021-05-29_23-47-19"></p>
<h1 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a><code>SSH</code>配置</h1><ol>
<li>在桌面空白处右键选择<code>Git Bash Here</code>：</li>
</ol>
<p>  <img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_19-35-29.png" alt="Snipaste_2021-05-29_19-35-29"></p>
<ol start="2">
<li>在弹出的<code>Git Bush Here</code>窗口中输入命令：</li>
</ol>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen -t rsa -C &quot;Github注册时使用的你的邮箱&quot;，例如：</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;123456789@qq.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>   <img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_14-56-13.png" alt="Snipaste_2021-05-29_14-56-13"></p>
<ol start="3">
<li>打开<code>Github</code>，点击头像找到<code>Settings</code>，点击进入<code>Settings</code>中并找到<code>SSH and GPG keys</code>，把复制的<code>SSH</code>秘钥粘贴到下面如图所示，提交。</li>
</ol>
<p>  <img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_14-40-31.png" alt="Snipaste_2021-05-29_14-40-31"></p>
<p>  <img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_19-54-29.png" alt="Snipaste_2021-05-29_19-54-29"></p>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<code>Hexo</code></h1><p><a href="https://hexo.io/zh-cn/docs/commands">详细指令参考</a></p>
<p>如果以上环境准备好了就可以使用<code>npm</code>开始安装<code>Hexo</code>了。也可查看 <a href="https://hexo.io/zh-cn/">Hexo</a> 的详细文档。</p>
<p><strong>1. 在<code>Git Bush Here</code>命令行输入执行以下命令：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局安装hexo-cli</span></span><br><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<p><img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_20-09-24.png" alt="Snipaste_2021-05-29_20-09-24"></p>
<p><strong>2. 在F盘中右键选择<code>Git Bash Here</code>创建项目并初始化：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo init 项目名称</span></span><br><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>

<p><img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_20-20-15.png" alt="Snipaste_2021-05-29_20-20-15"></p>
<p><strong>3. 下载包依赖：</strong></p>
<p>此时需要我们进入到<code>blog</code>文件家中，即在<code>F:\blog</code>右键打开<code>Git Bash Here</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用npm install 下载包依赖</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p><strong>4. 更换端口</strong></p>
<p>如果您想要更改端口，或是在执行时遇到了<code>EADDRINUSE</code>错误，可以在执行时使用 -p 选项指定其他端口(使用不被占用的端口号)，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo s -p 端口号</span></span><br><span class="line">hexo server -p 5000</span><br></pre></td></tr></table></figure>

<p><strong>5. 本地运行：</strong></p>
<p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo server 简写： hexo s</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="E:\Typro图片\blog篇\Snipaste_2021-05-29_20-29-53.png" alt="Snipaste_2021-05-29_20-29-53"></p>
<h1 id="把博客推送至Github"><a href="#把博客推送至Github" class="headerlink" title="把博客推送至Github"></a>把博客推送至<code>Github</code></h1><p><strong>1. 配置：</strong></p>
<p>使用<code>VScode</code>打开创建的<code>blog</code>文件夹，找到<code>F:\blog</code>下面的<code>_config.yml</code>文件并打开。配置如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: Hexo</span><br><span class="line">subtitle: <span class="string">&#x27;&#x27;</span></span><br><span class="line">description: <span class="string">&#x27;&#x27;</span></span><br><span class="line">keywords:</span><br><span class="line"><span class="comment"># author可改可不改</span></span><br><span class="line">author: coderapg</span><br><span class="line">language: en</span><br><span class="line">timezone: <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="comment">## url地址，当你在浏览器输入地址时，能够显示博客，但是一定要是https://你的用户名.github.io</span></span><br><span class="line">url: https://用户名.github.com</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  trailing_html: <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line">source_dir: <span class="built_in">source</span></span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line">new_post_name: :title.md <span class="comment"># File name of new posts</span></span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line">external_link:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  field: site <span class="comment"># Apply to the whole site</span></span><br><span class="line">  exclude: <span class="string">&#x27;&#x27;</span></span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">false</span></span><br><span class="line">  tab_replace: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  wrap: <span class="literal">true</span></span><br><span class="line">  hljs: <span class="literal">false</span></span><br><span class="line">prismjs:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">  preprocess: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  tab_replace: <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line">index_generator:</span><br><span class="line">  path: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line">meta_generator: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"><span class="comment">## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line">updated_option: <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">## theme这是是更换next主题</span></span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line"><span class="comment">## repo: 尽量使用SSH链接</span></span><br><span class="line">  repo: 粘贴复制过来的SSH链接地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p><strong>2. 安装<code>hexo-deployer-git</code></strong></p>
<p>断开<code>Git Bash Here</code>链接：按住<code>ctrl+c</code>退出，然后安装<code>hexo-deployer-git</code>依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p><strong>3. 安装<code>npm install hexo-server --save</code>：</strong></p>
<p>Hexo 3.0 把服务器独立成了个别模块，您必须先安装 <code>hexo-server</code>才能使用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-server --save</span><br></pre></td></tr></table></figure>

<p><strong>4. 清除缓存</strong></p>
<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p><strong>5. 生成静态文件：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo generate 简写： hexo g</span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p><strong>6. 提交推送</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 部署网站 </span></span><br><span class="line"><span class="comment"># hexo deploy 简写： hexo d</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h1 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a><code>Next</code>主题</h1><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>若以下每一步操作没能实现期望效果，则需：</p>
<ol>
<li><p><code>hexo clean</code>清除缓存文件和已生成的静态文件 </p>
</li>
<li><p><code>hexo g</code>重新生成静态文件</p>
</li>
<li><p><code>hexo s</code>重新启动服务器</p>
</li>
<li><p>重新刷新浏览器即可</p>
</li>
<li><p>若还未达到期望值，则需百度。</p>
</li>
</ol>
<p><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html">参考文献</a></p>
<p><a href="https://jiyali.github.io/2019/04/15/hexo-next-%E9%83%A8%E7%BD%B2%E5%90%84%E7%A7%8D%E7%82%AB%E9%85%B7%E5%8D%9A%E5%AE%A2%E7%89%B9%E6%95%88/">参考文献</a></p>
<h2 id="Next主题启用"><a href="#Next主题启用" class="headerlink" title="Next主题启用"></a><code>Next</code>主题启用</h2><p><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/INSTALLATION.md">安装指南</a></p>
<p><strong>1. 从<code>Github</code>上下载包并解压到<code>themes</code>文件夹中：</strong></p>
<p><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/INSTALLATION.md">Github Next主题</a></p>
<p><strong>2. 更换步骤第一种(推荐)：</strong></p>
<ol>
<li>打开上面链接，选择**<a href="https://github.com/theme-next/hexo-theme-next/releases/tag/v7.8.0">下载最新<code>release</code>版本</a>**</li>
<li>选择<a href="/theme-next/hexo-theme-next/archive/refs/tags/v7.8.0.zip">Source code</a>下载<code>zip</code>版本</li>
<li>解压并更改文件夹名为<code>next</code></li>
<li>复制<code>next</code>文件夹到<code>blog</code>下的<code>themes</code>文件夹下</li>
<li>更改<code>blog</code>子目录下的<code>_config.yml</code>文件夹中的<code>theme: next</code></li>
<li>从新<code>hexo g</code>后<code>hexo s</code>到本地预览</li>
</ol>
<p><strong>3. 更换步骤第二种：</strong></p>
<ol>
<li>打开<code>Github</code>搜索<code>hexo-theme-next</code>，以<a href="https://github.com/theme-next/hexo-theme-next">theme-next/hexo-theme-next</a>为例</li>
<li>点击<code>Code</code>选择<code>Download ZIP</code></li>
<li>解压并更改文件夹名为<code>next</code></li>
<li>复制<code>next</code>文件夹到<code>blog</code>下的<code>themes</code>文件夹下</li>
<li>更改<code>blog</code>子目录下的<code>_config.yml</code>文件夹中的<code>theme: next</code></li>
<li>从新<code>hexo g</code>后<code>hexo s</code>到本地预览</li>
</ol>
<h2 id="更改Next为中文"><a href="#更改Next为中文" class="headerlink" title="更改Next为中文"></a>更改<code>Next</code>为中文</h2><ol>
<li>打开<code>blog</code>下的<code>_config.yml</code>文件，找到<code>language: en</code>改成<code>language: zh-Hans</code></li>
<li>找到已经启动的<code>Git</code>，<code>ctrl+c</code>退出，然后<code>hexo clean</code>清除以下缓存，然后<code>hexo g</code>从新生成文件，然后<code>hexo s</code>重新在本地运行</li>
<li>刷新浏览器即可</li>
</ol>
<h2 id="增加标签页和分类页"><a href="#增加标签页和分类页" class="headerlink" title="增加标签页和分类页"></a>增加标签页和分类页</h2><p>打开<code>next</code>主题下的<code>_config.yml</code>文件，找到<code>menu:</code>释放<code>tags</code>和<code>categories</code>选项，从新刷新浏览器即可</p>
<p><strong>增加分类页</strong></p>
<p>打开<code>Git</code>界面，按下<code>ctrl+c</code>断开连接，输入<code>hexo new page tags</code>回车，同时会在<code>blog</code>下的<code>source</code>文件夹中生成一个<code>tags</code>文件夹，<code>hexo s</code></p>
<p>打开<code>blog</code>下的<code>source</code>下的<code>tags</code>下的<code>index.md</code>文件，设置<code>title: 标签</code>，同时添加一个<code>type: &quot;tags&quot;</code>(必须设置)，并保存。从新刷新浏览器</p>
<p><strong>增加分类页</strong></p>
<p>打开<code>Git</code>界面，按下<code>ctrl+c</code>断开连接，输入<code>hexo new page categories</code>回车，同时会在<code>blog</code>下的<code>source</code>文件夹中生成一个<code>categories</code>文件夹，<code>hexo s</code>从新刷新浏览器</p>
<p>打开<code>blog</code>下的<code>source</code>下的<code>categories</code>下的<code>index.md</code>文件，设置<code>title: 分类</code>，同时添加一个<code>type: &quot;categories&quot;</code>(必须设置)，并保存。从新刷新浏览器</p>
<h2 id="主题样式的更改"><a href="#主题样式的更改" class="headerlink" title="主题样式的更改"></a>主题样式的更改</h2><p>打开<code>next</code>主题下的<code>_config.yml</code>文件，找到<code>Schemes</code>设置你喜欢的样式。这里我使用的是<code>Gemini</code>主题样式。</p>
<h2 id="更改头像及头像样式设置"><a href="#更改头像及头像样式设置" class="headerlink" title="更改头像及头像样式设置"></a>更改头像及头像样式设置</h2><p>打开<code>next</code>主题下的<code>_config.yml</code>文件，找到<code>avatar</code>中的<code>url</code>地址更改为联网的图片地址。</p>
<p>打开<code>next</code>主体下的<code>source</code>下的<code>css</code>下的<code>_common</code>下的<code>outline</code>下的<code>sidebar</code>下的<code>sidebar-author.styl</code>文件，找到<code>.site-author-image</code>设置<code>border-radius: 50%; transition: 1s all;</code>，同时设置<code>.site-author-image:hover &#123; transform: rotate(360deg); &#125;</code>。</p>
<h2 id="更改标题和作者及链接"><a href="#更改标题和作者及链接" class="headerlink" title="更改标题和作者及链接"></a>更改标题和作者及链接</h2><p>打开<code>blog</code>下的<code>_config.yml</code>文件，找到<code>title</code>、<code>author</code>更改，更改后从新断开连接然后<code>hexo s</code>启动，刷新浏览器</p>
<h2 id="启用侧边栏社交链接"><a href="#启用侧边栏社交链接" class="headerlink" title="启用侧边栏社交链接"></a>启用侧边栏社交链接</h2><p>打开<code>next</code>主题下的<code>_config.yml</code>文件，找到<code>social:</code>，释放链接并更改。</p>
<h2 id="启用友情链接"><a href="#启用友情链接" class="headerlink" title="启用友情链接"></a>启用友情链接</h2><p>打开<code>next</code>主题下的<code>_config.yml</code>文件，找到<code>links:</code>，释放<code>Title</code>并更改，添加常用的链接即可，属性可以设置为中文，值必须是url地址才生效。</p>
<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p>方法1(直接创建<code>markdown</code>文章)：打开<code>blog</code>下的<code>source</code>下的<code>_posts</code>，右键新建一篇<code>markdown</code>文章。</p>
<p>方法2(使用命令行)： 在<code>blog</code>文件夹内，右键空白处，使用<code>Git Bash Here</code>打开<code>Git</code>，输入<code>hexo new 文章名称</code>即可，打开<code>_posts</code>查看到当前创建的<code>markdown</code>文章。</p>
<p>以上两种方式都可以创建文章，<code>Git</code>中输入<code>hexo s</code>重新服务，刷新浏览器即可。</p>
<p>创建好文章后，打开该文章配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文明名称</span><br><span class="line">date: 2021-01-30 16:08:41</span><br><span class="line">tags:</span><br><span class="line">   - 导航</span><br><span class="line">   - 分享</span><br><span class="line">categories: 前端</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是一级标题</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 这是二级标题 </span></span><br></pre></td></tr></table></figure>
<h2 id="Markdown的基本使用与语法"><a href="#Markdown的基本使用与语法" class="headerlink" title="Markdown的基本使用与语法"></a><code>Markdown</code>的基本使用与语法</h2><p>详细语法请参考<a href="http://markdown.p2hp.com/">Markdown</a></p>
<p>下载<code>markdown</code>或使用代码编辑器打开创建的文章。这里推荐使用<a href="https://code.visualstudio.com/">VSCode</a>打开，或使用<a href="https://www.typora.io/">Typora</a>打开进行编辑。</p>
<h2 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h2><p>打开<code>next</code>主题下的<code>_config.yml</code>文件，找到<code>reward_settings</code></p>
<p>当<code>enable: false</code>时，隐藏打赏功能，当<code>enable: true</code>时，开启打赏功能。</p>
<p>当<code>animation: true</code>时，当鼠标经过<code>xx支付</code>时，文字会发疯。</p>
<p>打开<code>next</code>主体下的<code>_config.yml</code>文件，找到<code>reward_settings:</code>下面的<code>enable: false</code>改为<code>enable: true</code>，同时<code>reward:</code>下面对应的链接也要设置对应的收钱码。</p>
<h2 id="首页文章设置文章摘要和截断"><a href="#首页文章设置文章摘要和截断" class="headerlink" title="首页文章设置文章摘要和截断"></a>首页文章设置文章摘要和截断</h2><p><strong>方法1：在文章中使用<!-- more -->手动进行截断(Hexo推荐的方法)</strong></p>
<p>在文章中使用 <!-- more -->，那么 <!-- more --> 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。</p>
<p>例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>

<p>首页中将只会出现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br></pre></td></tr></table></figure>

<p>正文中则会出现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line"></span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></table></figure>

<p><strong>方法2：在文章中的<code>front-matter</code>中添加<code>description</code>，并提供文章摘录</strong></p>
<p>这种方式只会在首页列表中显示文章的摘要内容，进入文章详情后不会再显示。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/2352140-67c6e1edb5695035.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/630/format/webp" alt="方法2"></p>
<p><strong>方法3： 自动形成摘要，在主题配置文件中添加</strong></p>
<p>默认截取的长度为 150 字符，可以根据需要自行设定</p>
<p>打开<code>next</code>主题下的<code>_config.yml</code>文件，查找<code>auto_excerpt:</code>，把<code>enable: false</code>改为<code>enable: true</code>。</p>
<p>如果<code>_config.yml</code>文件没有这个字段，则添加即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line"> <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line"> length: 150</span><br></pre></td></tr></table></figure>

<h2 id="修改-代码块包裹字段自定义样式"><a href="#修改-代码块包裹字段自定义样式" class="headerlink" title="修改``代码块包裹字段自定义样式"></a>修改``代码块包裹字段自定义样式</h2><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">code &#123;</span><br><span class="line">    color: <span class="comment">#ff7600;</span></span><br><span class="line">    background: <span class="comment">#fbf7f8;</span></span><br><span class="line">    margin: 2px;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: 5px 0;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight, code, pre &#123;</span><br><span class="line">    border: 1px solid <span class="comment">#d6d6d6;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是上面步骤对我来说无效，我在<code>next\source\css\_common\scaffolding\highlight\highlight.styl</code>中添加下列代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/* 自定义``中的代码样式 */</span><br><span class="line">code &#123;</span><br><span class="line">    color: <span class="comment">#ff7600;</span></span><br><span class="line">    background: <span class="comment">#fbf7f8;</span></span><br><span class="line">    margin: 2px;</span><br><span class="line">&#125;</span><br><span class="line">/* 设置结束 */</span><br><span class="line"></span><br><span class="line">/* 大代码块的自定义样式 */</span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: 5px 0;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line">/* 设置结束 */</span><br></pre></td></tr></table></figure>

<h2 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h2><p>打开<code>next</code>主题下的<code>_config.yml</code>，找到如下代码，值改为true，试试哪一款是你喜欢的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line">canvas_nest: <span class="literal">false</span></span><br><span class="line"><span class="comment"># three_waves</span></span><br><span class="line">three_waves: <span class="literal">false</span></span><br><span class="line"><span class="comment"># canvas_lines</span></span><br><span class="line">canvas_lines: <span class="literal">false</span></span><br><span class="line"><span class="comment"># canvas_sphere</span></span><br><span class="line">canvas_sphere: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>但上面情况对我来说无用，没有预期效果，<a href="https://www.cnblogs.com/Luweir/p/14147344.html">解决方案</a>，步骤如下：</p>
<ol>
<li>这几个东西我无论设置哪些个为true，都调不出动态背景：</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20200628235024881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5bGwxOTk4MDgxMg==,size_16,color_FFFFFF,t_70" alt="说明"></p>
<ol start="2">
<li>首先看这里：</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/2020062823574295.png" alt="说明"></p>
<p>表示这三个动态背景依赖于git克隆(clone)才能使用。</p>
<ol start="3">
<li>然后进入到<code>next</code>文件夹下，输入:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-three</span><br></pre></td></tr></table></figure>

<p>下载后就会有一个这样的文件出现在next文件夹中：</p>
<p><img src="https://img-blog.csdnimg.cn/20200629000231668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5bGwxOTk4MDgxMg==,size_16,color_FFFFFF,t_70" alt="说明"></p>
<p>只需要将此文件重命名为three，然后剪贴到next/source/lib文件下下面即可：</p>
<p><img src="https://img-blog.csdnimg.cn/20200629000324285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d5bGwxOTk4MDgxMg==,size_16,color_FFFFFF,t_70" alt="说明"></p>
<ol start="4">
<li>依赖包已经克隆了，之后就只用改之前那几个参数就能调选择你喜欢的动态背景了：</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20200629000538313.png" alt="说明"></p>
<h2 id="给博客添加fork-Github"><a href="#给博客添加fork-Github" class="headerlink" title="给博客添加fork Github"></a>给博客添加<code>fork Github</code></h2><p>实现效果展示：</p>
<p><img src="https://images2.pianshen.com/418/27/2706331134804d633d5e69578ecf6e3a.png" alt="实现效果展示"></p>
<p><strong>hexo在右上角或者左上角实现<code>fork me on github</code>步骤：</strong></p>
<ol>
<li>打开<a href="https://tholman.com/github-corners/">推荐链接</a>或者<a href="https://github.com/blog/273-github-ribbons">Github链接</a>挑选自己喜欢的样式，并复制。 </li>
</ol>
<p>我复制的是这段：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;https://github.com/你的github名字&quot;</span> class=<span class="string">&quot;github-corner&quot;</span> aria-label=<span class="string">&quot;View source on GitHub&quot;</span>&gt;&lt;svg width=<span class="string">&quot;80&quot;</span> height=<span class="string">&quot;80&quot;</span> viewBox=<span class="string">&quot;0 0 250 250&quot;</span> style=<span class="string">&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;&lt;path d=<span class="string">&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;</span>&gt;&lt;/path&gt;&lt;path d=<span class="string">&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot;</span> fill=<span class="string">&quot;currentColor&quot;</span> style=<span class="string">&quot;transform-origin: 130px 106px;&quot;</span> class=<span class="string">&quot;octo-arm&quot;</span>&gt;&lt;/path&gt;&lt;path d=<span class="string">&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot;</span> fill=<span class="string">&quot;currentColor&quot;</span> class=<span class="string">&quot;octo-body&quot;</span>&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>然后粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中(放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面)，并把<code>href</code>改为你的<code>github</code>地址，重新部署<code>hexo g</code>：</li>
</ol>
<p><img src="https://images1.pianshen.com/23/d1/d147e09de41ce2cb098e643cf8c9e747.png" alt="展示"></p>
<h2 id="修改文章内链接样式"><a href="#修改文章内链接样式" class="headerlink" title="修改文章内链接样式"></a>修改文章内链接样式</h2><p>打开<code>next</code>主体下的<code>source</code>下的<code>css</code>下的<code>_common</code>下的<code>components</code>下的<code>post</code>下的<code>post.styl</code>文件并打开，添加如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.post-body p a &#123;</span><br><span class="line">  color: purple;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #ff6700;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="修改文章底部带-的标签"><a href="#修改文章底部带-的标签" class="headerlink" title="修改文章底部带#的标签"></a>修改文章底部带<code>#</code>的标签</h2><p><a href="http://www.fontawesome.com.cn/faicons/">icons图标库</a></p>
<p>打开<code>next</code>主题下<code>layout</code>下的<code>_macro</code>下的<code>post.swig</code>文件，搜索<code>tag</code>关键字，找到<code>&lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&#123;&#123; tag_indicate &#125;&#125; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</code>把里面的<code>&#123;&#123; tag_indicate &#125;&#125;</code>替换成<code>&lt;i class=&quot;fa fa-gratipay&quot;&gt;&lt;/i&gt;</code>即可。如果未生效则<code>hexo clean</code>后<code>hexo g</code>后<code>hexo s</code>从新刷新浏览器。</p>
<h2 id="增加Valine评论功能"><a href="#增加Valine评论功能" class="headerlink" title="增加Valine评论功能"></a>增加<code>Valine</code>评论功能</h2><p>首先去<a href="https://leancloud.cn/">LeanCloud</a>注册登录。点击应用设置(齿轮形状)，点击<code>应用Keys</code>找到<code>AppID</code>和<code>AppKey</code>，复制并粘贴下面的设置中。</p>
<p>打开<code>next</code>主题下的<code>_config.yml</code>文件，找到<code>valine:</code>设置如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  appid: 填写你的appid</span><br><span class="line">  appkey: 填写你的appkey</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>

<h2 id="增加来必力评论"><a href="#增加来必力评论" class="headerlink" title="增加来必力评论"></a>增加<code>来必力</code>评论</h2><h2 id="增加Gitment评论"><a href="#增加Gitment评论" class="headerlink" title="增加Gitment评论"></a>增加<code>Gitment</code>评论</h2><h2 id="增加搜索功能"><a href="#增加搜索功能" class="headerlink" title="增加搜索功能"></a>增加搜索功能</h2><p>打开<a href="http://theme-next.iissnan.com/third-party-services.html#local-search">Local Search</a>，打开<code>blog</code>文件夹，右键<code>Git Bash Here</code>，执行<code>npm install hexo-generator-searchdb --save</code>。等待下载完成后，打开<code>blog</code>下的<code>_config.yml</code>文件，粘贴下列代码到文件内任意位置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure>

<p>然后打开<code>next</code>主题下的<code>_config.yml</code>文件，搜索<code>local_search</code>找到<code>enable: false</code>更改为<code>enable: true</code>。</p>
<h2 id="增加不蒜子统计访问量功能"><a href="#增加不蒜子统计访问量功能" class="headerlink" title="增加不蒜子统计访问量功能"></a>增加<code>不蒜子</code>统计访问量功能</h2><p>打开<a href="http://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi">不蒜子统计</a>，在<code>next</code>主题下打开<code>_config.yml</code>文件，搜索<code>busuanzi_count</code>设置<code>enable: true</code>，具体配置查看<a href="http://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi">不蒜子统计</a>。</p>
<h2 id="增加内容分享服务"><a href="#增加内容分享服务" class="headerlink" title="增加内容分享服务"></a>增加内容分享服务</h2><p><strong>JiaThis：</strong></p>
<p>打开<a href="http://theme-next.iissnan.com/third-party-services.html#share-jiathis">JiaThis分享服务</a>，在<code>next</code>主题下打开<code>_config.yml</code>文件，更改<code>jiathis: true</code>。</p>
<p><strong>百度分享：</strong></p>
<p>打开<a href="http://theme-next.iissnan.com/third-party-services.html#share-jiathis">百度分享服务</a>，在<code>next</code>主题下打开<code>_config.yml</code>文件，更改<code>baidushare: true</code>。</p>
<p><strong>AddThis：</strong></p>
<ol>
<li><p>在网站 <a href="https://www.addthis.com/">AddThis</a> 上注册账号。</p>
</li>
<li><p>打开<a href="http://theme-next.iissnan.com/third-party-services.html#share-jiathis">百度分享服务</a>，在<code>next</code>主题下打开<code>_config.yml</code>文件，更改<code>baidushare: true</code>。</p>
</li>
</ol>
<h2 id="增加加载效果"><a href="#增加加载效果" class="headerlink" title="增加加载效果"></a>增加加载效果</h2><p>如果在设置加载效果时，未出现效果，则需要打开<a href="https://zhuanlan.zhihu.com/p/58308720">加载效果帮助</a></p>
<p>在<code>next</code>主题下打开<code>Git Bash Here</code>复制到<code>Git</code>命令行中执行<code>git clone https://github.com/theme-next/theme-next-pace source/lib/pace</code>，同时打开<code>next</code>主题下的<code>_config.yml</code>文件，搜索<code>pace:</code>更改<code>enable: true</code>，同时<code>theme: center-simple</code>选择你喜欢的加载动画保存，然后在<code>hexo s</code>。</p>
<h2 id="增加点击爆炸效果"><a href="#增加点击爆炸效果" class="headerlink" title="增加点击爆炸效果"></a>增加点击爆炸效果</h2><p><a href="https://www.bilibili.com/video/BV16W411t7mq?p=27">视频连接</a></p>
<h2 id="设置代码块高亮效果"><a href="#设置代码块高亮效果" class="headerlink" title="设置代码块高亮效果"></a>设置代码块高亮效果</h2><p>打开<code>next</code>主题下的<code>_config.yml</code>文件，找到<code>codeblock:</code>定义<code>highlight_theme</code>代码块的主体。</p>
<h2 id="隐藏底部的强力驱动"><a href="#隐藏底部的强力驱动" class="headerlink" title="隐藏底部的强力驱动"></a>隐藏底部的强力驱动</h2><p><img src="E:\Typro图片\blog篇\Snipaste_2021-05-31_11-33-59.png" alt="说明"></p>
<p>打开<code>next</code>主体下的<code>layout</code>下的<code>_partials</code>下的<code>footer.swig</code>文件，找到对应的位置(大概是倒数第三段代码)，使用<code>&lt;!-- 代码 --&gt;</code>如下图所示，刷新浏览器即可。</p>
<p><img src="E:\Typro图片\blog篇\Snipaste_2021-05-31_11-47-03.png" alt="Snipaste_2021-05-31_11-47-03"></p>
<h2 id="实现数字统计和阅读时长的功能"><a href="#实现数字统计和阅读时长的功能" class="headerlink" title="实现数字统计和阅读时长的功能"></a>实现数字统计和阅读时长的功能</h2><ol>
<li>在<code>blog</code>根目录下右键点击<code>Git Bash Here</code>，命令行中输入下列代码并回车：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>打开<code>next</code>文件下的<code>_config.yml</code>文件，找到<code>post_wordcount</code>并开启<code>wordcount: true</code>和<code>nin2read: true</code>。</p>
</li>
<li><p>重新<code>hexo s</code>刷新浏览器。</p>
</li>
</ol>
<p>由于版本问题，上面的配置对我无效，所以我的做法是：</p>
<ol>
<li>在<code>blog</code>根目录下右键点击<code>Git Bash Here</code>，命令行中输入下列代码并回车：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-symbols-count-time</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>重新<code>hexo g</code>后<code>hexo s</code>刷新浏览器。</li>
</ol>
<h2 id="添加标签云"><a href="#添加标签云" class="headerlink" title="添加标签云"></a>添加标签云</h2><p><img src="https://upload-images.jianshu.io/upload_images/1059816-863cf504935099d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/240/format/webp" alt="展示"></p>
<ol>
<li>在<code>blog</code>目录下右键空白处打开<code>Git Bash Here</code>输入下列代码，回车执行</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-cloud --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>打开<code>blog</code>下的<code>_confiig.yml</code>文件，在文件中添加下列代码片段：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-tag-cloud 标签云 | see https://github.com/MikeCoder/hexo-tag-cloud</span></span><br><span class="line">tag_cloud:</span><br><span class="line">  textFont: Trebuchet MS, Helvetica <span class="comment"># 字体</span></span><br><span class="line">  textColor: <span class="string">&#x27;#555&#x27;</span> <span class="comment"># 字体颜色</span></span><br><span class="line">  textHeight: 25 <span class="comment"># 字体高度</span></span><br><span class="line">  outlineColor: <span class="string">&#x27;#E2E1D1&#x27;</span> <span class="comment"># 字体背景色</span></span><br><span class="line">  maxSpeed: 0.1 <span class="comment"># 标签云最大移动速度</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>打开<code>next</code>文件下的<code>layout</code>下的<code>\_macro</code>下的<code>sidebar.swig</code>文件，找到类名为<code>sidebar-inner</code>的<code>div</code>，在该元素中最后位置添加下列代码片段：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!-- 添加标签云 --&gt;  </span><br><span class="line">&#123;% <span class="keyword">if</span> site.tags.length &gt; 1 %&#125;</span><br><span class="line">  &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span> src=<span class="string">&quot;/js/tagcloud.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span> src=<span class="string">&quot;/js/tagcanvas.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;div class=<span class="string">&quot;widget-wrap&quot;</span>&gt;</span><br><span class="line">      &lt;h3 class=<span class="string">&quot;widget-title&quot;</span> style=<span class="string">&quot;background: #eaeaea;&quot;</span>&gt;Tag Cloud&lt;/h3&gt;</span><br><span class="line">      &lt;div id=<span class="string">&quot;myCanvasContainer&quot;</span> class=<span class="string">&quot;widget tagcloud&quot;</span>&gt;</span><br><span class="line">          &lt;canvas width=<span class="string">&quot;250&quot;</span> height=<span class="string">&quot;250&quot;</span> id=<span class="string">&quot;resCanvas&quot;</span> style=<span class="string">&quot;width=100%&quot;</span>&gt;</span><br><span class="line">              &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">          &lt;/canvas&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>终端执行<code>hexo clean</code>后执行<code>hexo g</code>后执行<code>hexo s</code>，刷新浏览器即可。</li>
</ol>
<h2 id="添加RSS功能"><a href="#添加RSS功能" class="headerlink" title="添加RSS功能"></a>添加RSS功能</h2><ol>
<li><p>找到<code>blog</code>主目录文件 -&gt; 右键 <code>Git Bash Here</code> -&gt; 执行 <code>npm install --save hexo-generator-feed</code> -&gt; 安装结束后，打开博客主目录文件 -&gt; 打开 <code>_config.yml</code> -&gt; 在末尾添加代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加RSS功能</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure></li>
<li><p>再打开 <code>themes</code> -&gt; <code>next</code> -&gt; <code>_config.yml</code> -&gt; 搜索 <code>rss</code> -&gt; 在 <code>rss:</code> 后面添加 <code>/atom.xml</code>，,注意在冒号后面要加一个空格</p>
</li>
<li></li>
</ol>
<h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><p><a href="http://www.zhaojun.im/hexo-lazyload/">lazyload</a>懒加载教程</p>
<ol>
<li>在你的<code>Hexo</code>目录下，执行以下命令：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-lazyload-image --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>然后在你的<code>Hexo</code>目录的配置文件<code>_config.yml</code>中复制下列代码:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  onlypost: <span class="literal">false</span></span><br><span class="line"><span class="comment"># 图片地址在你的hexo下面的public/images文件夹中</span></span><br><span class="line">  loadingImg: /images/loading.png </span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>是否仅文章中的图片做懒加载，如果为 false, 则主题中的其他图片，也会做懒加载，如头像，logo 等任何图片.</p>
</li>
<li><p>loadingImg - 图片未加载时的代替图</p>
<blockquote>
<p>不填写使用默认加载图片，如果需要自定义，添填入 loading 图片地址，如果是本地图片，不要忘记把图片添加到你的主题目录下。 将图片放到 <code>blog\themes\next\source\images</code> 目录下，然后引用时: loadingImg: /images/图片文件名</p>
</blockquote>
</li>
</ol>
<h2 id="文章末尾添加”本文结束”标记"><a href="#文章末尾添加”本文结束”标记" class="headerlink" title="文章末尾添加”本文结束”标记"></a>文章末尾添加”本文结束”标记</h2><p>修改在<code>themes/next/layout/_macro/post.swig</code>中，在<code>&#123;%- if not is_index %&#125;</code>上面添加如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;text-align:center;color: #ccc;font-size:14px;&quot;</span>&gt;---------------- The End ----------------&lt;/div&gt;</span><br><span class="line">&#123;% <span class="keyword">if</span> theme.wechat_subscriber.enabled and not is_index %&#125;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &#123;% include <span class="string">&#x27;wechat-subscriber.swig&#x27;</span> %&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="增加鼠标点击特效-心型特效"><a href="#增加鼠标点击特效-心型特效" class="headerlink" title="增加鼠标点击特效-心型特效"></a>增加鼠标点击特效-心型特效</h2><ol>
<li>在<code>/themes/next/source/js/src</code>下新建文件<code>clicklove.js</code>，把下列代码拷贝粘贴到clicklove.js文件中。代码如下：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!<span class="keyword">function</span>(e,t,a)&#123;<span class="keyword">function</span> <span class="function"><span class="title">n</span></span>()&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="keyword">function</span> <span class="function"><span class="title">r</span></span>()&#123;<span class="keyword">for</span>(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="keyword">function</span> <span class="function"><span class="title">o</span></span>()&#123;var t=<span class="string">&quot;function&quot;</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=<span class="keyword">function</span>(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="keyword">function</span> i(e)&#123;var a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;<span class="keyword">function</span> c(e)&#123;var a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[0].appendChild(a)&#125;<span class="keyword">function</span> <span class="function"><span class="title">s</span></span>()&#123;<span class="built_in">return</span><span class="string">&quot;rgb(&quot;</span>+~~(255*Math.random())+<span class="string">&quot;,&quot;</span>+~~(255*Math.random())+<span class="string">&quot;,&quot;</span>+~~(255*Math.random())+<span class="string">&quot;)&quot;</span>&#125;var d=[];e.requestAnimationFrame=<span class="function"><span class="title">function</span></span>()&#123;<span class="built_in">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="keyword">function</span>(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在<code>\themes\next\layout\_layout.swig</code>文件末尾添加：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/src/clicklove.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>重新清理下<code>hexo clean</code>，然后生成下<code>hexo g</code>，然后<code>hexo s</code>，刷新浏览器进行测试。</li>
</ol>
<h2 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h2><p><a href="https://www.pianshen.com/article/6772705615/">参照</a></p>
<ol>
<li>修改 <code>themes/next/layout/_macro/sidebar.swig</code> 文件，添加下列代码放置于图中的位置：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!-- 添加音乐播放器 --&gt; </span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> theme.background_music %&#125;</span><br><span class="line">    &lt;iframe frameborder=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> marginwidth=<span class="string">&quot;0&quot;</span> marginheight=<span class="string">&quot;0&quot;</span> width=<span class="string">&quot;210&quot;</span> height=<span class="string">&quot;110&quot;</span> src=<span class="string">&quot;&#123;&#123; theme.background_music &#125;&#125;&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://images1.pianshen.com/124/ad/ad01a69067477f054e63f745ff9a9fe4.png" alt="外链资源"></p>
<ol start="2">
<li>我用的是网易云的外链歌单，<a href="https://www.pianshen.com/article/6772705615/">生成外链歌单步骤</a>，把外链的歌单在 <code>themes/next/_config.yml</code> 配置文件中添加歌单地址配置，如下代码</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 歌单链接：</span></span><br><span class="line">background_music: //music.163.com/outchain/player?<span class="built_in">type</span>=0&amp;id=6784491855&amp;auto=1&amp;height=66</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>hexo clean</code>清除文件<code>hexo g</code>重新生成<code>hexo s</code>重新运行，刷新浏览器</li>
</ol>
<h2 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h2><p><img src="https://upload-images.jianshu.io/upload_images/5308475-f26f21e2f2b34e18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/662/format/webp" alt="效果图"></p>
<ol>
<li>切换到根目录下，然后运行如下代码:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;theme-info&quot;</span>&gt;</span><br><span class="line">  &lt;div class=<span class="string">&quot;powered-by&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;span class=<span class="string">&quot;post-count&quot;</span>&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h2 id="设置网站的图标Favicon"><a href="#设置网站的图标Favicon" class="headerlink" title="设置网站的图标Favicon"></a>设置网站的图标<code>Favicon</code></h2><p>在<a href="http://www.easyicon.net/">EasyIcon</a>中找一张（32*32）的ico图标,或者去别的网站下载或者制作，并将图标名称改为favicon.ico，然后把图标放在/themes/next/source/images里，并且修改主题配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></span><br><span class="line">favicon: /favicon.ico</span><br></pre></td></tr></table></figure>

<h2 id="修改网页底部跳动的心"><a href="#修改网页底部跳动的心" class="headerlink" title="修改网页底部跳动的心"></a>修改网页底部跳动的心</h2><p>打开<code>next\_config.yml</code>文件，找到<code>footer</code>下的<code>icon</code>，<code>name</code>修改为<code>heartbeat</code>，动画<code>animated: true</code>，<code>color</code>自定义。</p>
<h2 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h2><ol>
<li>修改<code>hero-generator-index</code>插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code>内的代码替换为：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">var pagination = require(<span class="string">&#x27;hexo-pagination&#x27;</span>);</span><br><span class="line">module.exports = <span class="keyword">function</span>(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="keyword">function</span>(a, b) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="built_in">return</span> b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">return</span> b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            <span class="built_in">return</span> -1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            <span class="built_in">return</span> 1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">return</span> b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">    &#125;);</span><br><span class="line">  var paginationDir = config.pagination_dir || <span class="string">&#x27;page&#x27;</span>;</span><br><span class="line">  <span class="built_in">return</span> pagination(<span class="string">&#x27;&#x27;</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;archive&#x27;</span>],</span><br><span class="line">    format: paginationDir + <span class="string">&#x27;/%d/&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在文章中添加<code>top</code>值，数值越大文章越靠前，如:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 解决Charles乱码问题</span><br><span class="line">date: 2017-05-22 22:45:48</span><br><span class="line">tags: 技巧</span><br><span class="line">categories: 技巧</span><br><span class="line">copyright: <span class="literal">true</span></span><br><span class="line">top: 100</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h2 id="添加粒子时钟特效"><a href="#添加粒子时钟特效" class="headerlink" title="添加粒子时钟特效"></a>添加粒子时钟特效</h2><p><img src="https://www.jianshu.com/p/c83542ac8193" alt="详细步骤"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/1059816-c1bb4ca62ce42419.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/220/format/webp" alt="效果展示"></p>
<ol>
<li>配置主题</li>
</ol>
<p>为便于维护，通过修改主题配置文件（主题根目录的<code> _config.yml</code> 文件）实现。打开主题目录下的 <code>_config.yml</code> 文件，新增以下代码片段：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 侧栏粒子时钟</span></span><br><span class="line">diy_clock:</span><br><span class="line">  clock: <span class="literal">true</span> <span class="comment"># 为 true 时开启粒子时钟，为 false 时关闭粒子时钟</span></span><br><span class="line">  runtime: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>自定义粒子时钟脚本</li>
</ol>
<p>主题目录下新增文件 <code>source/js/custom/clock.js</code> 文件。<code>NexT</code> 主题默认没有 <code>custom</code> 文件夹，需要自己新建。在 <code>clock.js</code> 文件中填入以下代码：</p>
<p>下面这段<code>js</code>代码就是粒子时钟的具体实现。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">  var digit =</span><br><span class="line">    [</span><br><span class="line">      [</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 1, 1, 0, 1, 1, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 1, 1, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0]</span><br><span class="line">      ],//0</span><br><span class="line">      [</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 1, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [1, 1, 1, 1, 1, 1, 1]</span><br><span class="line">      ],//1</span><br><span class="line">      [</span><br><span class="line">        [0, 1, 1, 1, 1, 1, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 0, 0, 0],</span><br><span class="line">        [0, 1, 1, 0, 0, 0, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 0, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 1, 1, 1, 1, 1]</span><br><span class="line">      ],//2</span><br><span class="line">      [</span><br><span class="line">        [1, 1, 1, 1, 1, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 1, 1, 1, 1, 1, 0]</span><br><span class="line">      ],//3</span><br><span class="line">      [</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 1, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 1, 0],</span><br><span class="line">        [0, 1, 1, 0, 1, 1, 0],</span><br><span class="line">        [1, 1, 0, 0, 1, 1, 0],</span><br><span class="line">        [1, 1, 1, 1, 1, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 1, 1]</span><br><span class="line">      ],//4</span><br><span class="line">      [</span><br><span class="line">        [1, 1, 1, 1, 1, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 0, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 0, 0],</span><br><span class="line">        [1, 1, 1, 1, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 1, 1, 1, 1, 1, 0]</span><br><span class="line">      ],//5</span><br><span class="line">      [</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 1, 1, 0, 0, 0],</span><br><span class="line">        [0, 1, 1, 0, 0, 0, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 0, 0],</span><br><span class="line">        [1, 1, 0, 1, 1, 1, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 1, 1, 1, 1, 1, 0]</span><br><span class="line">      ],//6</span><br><span class="line">      [</span><br><span class="line">        [1, 1, 1, 1, 1, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 0, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 0, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 0, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 0, 0, 0]</span><br><span class="line">      ],//7</span><br><span class="line">      [</span><br><span class="line">        [0, 1, 1, 1, 1, 1, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 1, 1, 1, 1, 1, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 1, 1, 1, 1, 1, 0]</span><br><span class="line">      ],//8</span><br><span class="line">      [</span><br><span class="line">        [0, 1, 1, 1, 1, 1, 0],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [1, 1, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 1, 1, 1, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 0, 1, 1],</span><br><span class="line">        [0, 0, 0, 0, 1, 1, 0],</span><br><span class="line">        [0, 0, 0, 1, 1, 0, 0],</span><br><span class="line">        [0, 1, 1, 0, 0, 0, 0]</span><br><span class="line">      ],//9</span><br><span class="line">      [</span><br><span class="line">        [0, 0, 0, 0, 0, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 0, 0, 0, 0],</span><br><span class="line">        [0, 0, 0, 0, 0, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 1, 1, 1, 0, 0],</span><br><span class="line">        [0, 0, 0, 0, 0, 0, 0]</span><br><span class="line">      ]//:</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">  var canvas = document.getElementById(<span class="string">&#x27;canvasDiyBlock&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (canvas.getContext) &#123;</span><br><span class="line">    var cxt = canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">    //声明canvas的宽高</span><br><span class="line">    var H = 100, W = 700;</span><br><span class="line">    canvas.height = H;</span><br><span class="line">    canvas.width = W;</span><br><span class="line">    cxt.fillStyle = <span class="string">&#x27;#f00&#x27;</span>;</span><br><span class="line">    cxt.fillRect(10, 10, 50, 50);</span><br><span class="line"></span><br><span class="line">    //存储时间数据</span><br><span class="line">    var data = [];</span><br><span class="line">    //存储运动的小球</span><br><span class="line">    var balls = [];</span><br><span class="line">    //设置粒子半径</span><br><span class="line">    var R = canvas.height / 20 - 1;</span><br><span class="line">    (<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">      var temp = /(\d)(\d):(\d)(\d):(\d)(\d)/.<span class="built_in">exec</span>(new Date());</span><br><span class="line">      //存储时间数字，由十位小时、个位小时、冒号、十位分钟、个位分钟、冒号、十位秒钟、个位秒钟这7个数字组成</span><br><span class="line">      data.push(temp[1], temp[2], 10, temp[3], temp[4], 10, temp[5], temp[6]);</span><br><span class="line">    &#125;)();</span><br><span class="line"></span><br><span class="line">    /*生成点阵数字*/</span><br><span class="line">    <span class="keyword">function</span> renderDigit(index, num) &#123;</span><br><span class="line">      <span class="keyword">for</span> (var i = 0; i &lt; digit[num].length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (var j = 0; j &lt; digit[num][i].length; j++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (digit[num][i][j] == 1) &#123;</span><br><span class="line">            cxt.beginPath();</span><br><span class="line">            cxt.arc(14 * (R + 2) * index + j * 2 * (R + 1) + (R + 1), i * 2 * (R + 1) + (R + 1), R, 0, 2 * Math.PI);</span><br><span class="line">            cxt.closePath();</span><br><span class="line">            cxt.fill();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /*更新时钟*/</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">updateDigitTime</span></span>() &#123;</span><br><span class="line">      var changeNumArray = [];</span><br><span class="line">      var temp = /(\d)(\d):(\d)(\d):(\d)(\d)/.<span class="built_in">exec</span>(new Date());</span><br><span class="line">      var NewData = [];</span><br><span class="line">      NewData.push(temp[1], temp[2], 10, temp[3], temp[4], 10, temp[5], temp[6]);</span><br><span class="line">      <span class="keyword">for</span> (var i = data.length - 1; i &gt;= 0; i--) &#123;</span><br><span class="line">        //时间发生变化</span><br><span class="line">        <span class="keyword">if</span> (NewData[i] !== data[i]) &#123;</span><br><span class="line">          //将变化的数字值和在data数组中的索引存储在changeNumArray数组中</span><br><span class="line">          changeNumArray.push(i + <span class="string">&#x27;_&#x27;</span> + (Number(data[i]) + 1) % 10);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      //增加小球</span><br><span class="line">      <span class="keyword">for</span> (var i = 0; i &lt; changeNumArray.length; i++) &#123;</span><br><span class="line">        addBalls.apply(this, changeNumArray[i].split(<span class="string">&#x27;_&#x27;</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      data = NewData.concat();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /*更新小球状态*/</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">updateBalls</span></span>() &#123;</span><br><span class="line">      <span class="keyword">for</span> (var i = 0; i &lt; balls.length; i++) &#123;</span><br><span class="line">        balls[i].stepY += balls[i].disY;</span><br><span class="line">        balls[i].x += balls[i].stepX;</span><br><span class="line">        balls[i].y += balls[i].stepY;</span><br><span class="line">        <span class="keyword">if</span> (balls[i].x &gt; W + R || balls[i].y &gt; H + R) &#123;</span><br><span class="line">          balls.splice(i, 1);</span><br><span class="line">          i--;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /*增加要运动的小球*/</span><br><span class="line">    <span class="keyword">function</span> addBalls(index, num) &#123;</span><br><span class="line">      var numArray = [1, 2, 3];</span><br><span class="line">      var colorArray = [<span class="string">&quot;#3BE&quot;</span>, <span class="string">&quot;#09C&quot;</span>, <span class="string">&quot;#A6C&quot;</span>, <span class="string">&quot;#93C&quot;</span>, <span class="string">&quot;#9C0&quot;</span>, <span class="string">&quot;#690&quot;</span>, <span class="string">&quot;#FB3&quot;</span>, <span class="string">&quot;#F80&quot;</span>, <span class="string">&quot;#F44&quot;</span>, <span class="string">&quot;#C00&quot;</span>];</span><br><span class="line">      <span class="keyword">for</span> (var i = 0; i &lt; digit[num].length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (var j = 0; j &lt; digit[num][i].length; j++) &#123;</span><br><span class="line">          <span class="keyword">if</span> (digit[num][i][j] == 1) &#123;</span><br><span class="line">            var ball = &#123;</span><br><span class="line">              x: 14 * (R + 2) * index + j * 2 * (R + 1) + (R + 1),</span><br><span class="line">              y: i * 2 * (R + 1) + (R + 1),</span><br><span class="line">              stepX: Math.floor(Math.random() * 4 - 2),</span><br><span class="line">              stepY: -2 * numArray[Math.floor(Math.random() * numArray.length)],</span><br><span class="line">              color: colorArray[Math.floor(Math.random() * colorArray.length)],</span><br><span class="line">              disY: 1</span><br><span class="line">            &#125;;</span><br><span class="line">            balls.push(ball);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /*渲染*/</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">render</span></span>() &#123;</span><br><span class="line">      //重置画布宽度，达到清空画布的效果</span><br><span class="line">      canvas.height = 100;</span><br><span class="line">      //渲染时钟</span><br><span class="line">      <span class="keyword">for</span> (var i = 0; i &lt; data.length; i++) &#123;</span><br><span class="line">        renderDigit(i, data[i]);</span><br><span class="line">      &#125;</span><br><span class="line">      //渲染小球</span><br><span class="line">      <span class="keyword">for</span> (var i = 0; i &lt; balls.length; i++) &#123;</span><br><span class="line">        cxt.beginPath();</span><br><span class="line">        cxt.arc(balls[i].x, balls[i].y, R, 0, 2 * Math.PI);</span><br><span class="line">        cxt.fillStyle = balls[i].color;</span><br><span class="line">        cxt.closePath();</span><br><span class="line">        cxt.fill();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    clearInterval(oTimer);</span><br><span class="line">    var oTimer = setInterval(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">      //更新时钟</span><br><span class="line">      updateDigitTime();</span><br><span class="line">      //更新小球状态</span><br><span class="line">      updateBalls();</span><br><span class="line">      //渲染</span><br><span class="line">      render();</span><br><span class="line">    &#125;, 50);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>自定义视图</li>
</ol>
<p>接下来在主题下新增一个视图文件 <code>layout/_custom/clock.swig</code>，用这个文件来引入上面的 <code>js</code> 代码。<code>NexT</code> 主题默认没有 <code>_custom</code> 文件夹，需自行创建。通常情况下，自定义的所有视图统一放置在 <code>_custom</code> 目录下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;canvas id=<span class="string">&quot;canvasDiyBlock&quot;</span> style=<span class="string">&quot;width:60%;&quot;</span>&gt;当前浏览器不支持canvas，请更换浏览器后再试&lt;/canvas&gt;</span><br><span class="line">  &#123;&#123;- next_js(<span class="string">&#x27;custom/clock.js&#x27;</span>) &#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">代码中的第 3 行，next_js() 方法是 NexT 主题内置的用来引入 js 的通用方法，该方法将 <span class="built_in">source</span>/js/ 目录作为相对路径，所以上面的 custom/clock.js 其实就是主题目录中的 <span class="built_in">source</span>/js/custom/clock.js 文件。</span><br></pre></td></tr></table></figure>

<blockquote>
<p>因粒子时钟的实现是用现代浏览器支持的 canvas 绘图实现的，在 IE 等浏览器上可能无法正常显示，这时，页面上就会显示当前浏览器不支持canvas，请更换浏览器后再试。</p>
</blockquote>
<ol start="4">
<li>导入视图</li>
</ol>
<p>至此，在页面上任意位置引入上面的 <code>layout/_custom/clock.swig</code> 文件即可实现粒子时钟了。比如放在页面的侧边栏，既美观又不影响网站的易用性。打开主题目录下的 <code>layout/_macro/sidebar.swig</code> 文件，找到 <code>class</code> 为 <code>sidebar-inner</code> 的 <code>div</code> 元素，在该元素中最后位置引入上面的 <code>clock.swig</code> 文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;%- <span class="keyword">if</span> theme.diy_clock.clock %&#125;</span><br><span class="line">  &#123;%- include <span class="string">&#x27;../_custom/clock.swig&#x27;</span> %&#125;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p>当主题配置中的 <code>diy_clock.clock</code> 为 <code>true</code> 时，页面加载粒子时钟。</p>
<h2 id="创建404页面"><a href="#创建404页面" class="headerlink" title="创建404页面"></a>创建404页面</h2><p>当我们访问博客时，后面url地址不正确，则会出现<code>404</code>页面。我们这里是为了能够美化上述出现的<code>404page</code>。其实很简单，但是在本地测试的话不会出现效果，只有在推送到<code>Github</code>上才会显示效果。</p>
<p>如果想要在本地显示效果，则<code>url</code>地址栏中一定要<code>localhost:4000/404</code>才会出现测试效果。实现步骤：</p>
<ol>
<li>在<code>blog\source</code>创建404页面，如下代码：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page 404</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>复制粘贴下列代码到<code>blog\source\404\404.md</code>文档中：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404</span><br><span class="line">date: 2021-03-01 18:22:56</span><br><span class="line">type: &quot;404&quot;</span><br><span class="line">layout: &quot;404&quot;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">		&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">		&lt;title&gt;404&lt;/title&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;script type=&quot;text/javascript&quot; 			  src=&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>hexo g</code>后<code>hexo s</code>刷新浏览器即可。输入<code>localhost:4000/404</code>即可查看效果。</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于<code>Hexo</code>来说能实现的效果太多太多，这些只是我在创建<code>Hexo</code>时所遇到的问题和总结，希望能给你带来帮助。同时以后如果再实现某些功能的话，也会进行补全响应的操作。</p>
<h1 id="Hexo-SEO优化"><a href="#Hexo-SEO优化" class="headerlink" title="Hexo-SEO优化"></a><code>Hexo-SEO</code>优化</h1><p><a href="http://xinyufeng.net/2019/12/13/Hexo%E5%8D%9A%E5%AE%A2Next%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/">文章</a></p>
<h2 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h2><p><strong>1. 安装扩展</strong></p>
<p>需要安装两个插件来生成 sitemap 文件，前一个是传统的 sitemap，后一个是百度的 sitemap。在博客根目录下右键打开<code>Git</code>，输入下列命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<p><strong>2. 修改站点配置文件</strong></p>
<p>将<code>sitemap</code>文件添加到站点配置文件<code>blog\_config.yml</code>中，并修改<code>url</code>字段的值为你的博客域名，其值默认为<code>http://yoursite.com</code>(在上述<code>把博客推送至Github</code>中已经修改完毕url了)。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新增字段</span></span><br><span class="line">sitemap: </span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure>

<p>安装完成后执行<code>hexo g</code>，即会在<code>blog\public</code>目录下生成<code>sitemap.xml和baidusitemap.xml</code>。</p>
<h2 id="添加蜘蛛协议"><a href="#添加蜘蛛协议" class="headerlink" title="添加蜘蛛协议"></a>添加蜘蛛协议</h2><p>在站点<code>source</code>文件夹下新建<code>robots.txt</code>文件，文件内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Allow: /archives/</span><br><span class="line">Allow: /categories/</span><br><span class="line">Allow: /tags/ </span><br><span class="line">Allow: /awesome/ </span><br><span class="line">Disallow: /js/</span><br><span class="line">Disallow: /css/</span><br><span class="line">Disallow: /images/</span><br><span class="line">Disallow: /fonts/</span><br><span class="line"></span><br><span class="line">Sitemap: https:xinyufeng.net/sitemap.xml</span><br><span class="line">Sitemap: https:xinyufeng.net/baidusitemap.xml</span><br></pre></td></tr></table></figure>

<p><code>Allow</code>字段的值即为允许搜索引擎爬区的内容，可以对应到主题配置文件中的<code>menu</code>目录配置，如果菜单栏还有其他选项都可以按照格式自行添加，<code>Disallow</code>字段的值则为拒绝搜索引擎爬区的内容。</p>
<p>需要将<code>https:xinyufeng.net</code>改成自己的域名。</p>
<h2 id="百度主动提交"><a href="#百度主动提交" class="headerlink" title="百度主动提交"></a>百度主动提交</h2><ol>
<li>百度也可以主动提交网址。这种方法需要安装<code>hexo</code>插件:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>插件安装成功后在<code>blog\_config.yml</code>配置文件中加入一下配置:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">baidu_url_submit:</span><br><span class="line">  count: 3 <span class="comment">## 比如3，代表提交最新的三个链接</span></span><br><span class="line">  host: https://hoxis.github.io <span class="comment">## 在百度站长平台中注册的域名</span></span><br><span class="line">  token: your_token <span class="comment">## 请注意这是您的秘钥， 请不要发布在公众仓库里!</span></span><br><span class="line">  path: baidu_urls.txt <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.sunluomeng.top/FsC348xGbzQCaUlXIWuVP4UgNIxe" alt="提示"></p>
<p><strong>以上操作切记要修改站点的URL地址，修改成你自己的</strong></p>
<ol start="3">
<li></li>
</ol>
<h1 id="Hexo性能优化"><a href="#Hexo性能优化" class="headerlink" title="Hexo性能优化"></a><code>Hexo</code>性能优化</h1>]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>Git</tag>
        <tag>Node</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue简介、前端体系与前后端分离认知</title>
    <url>/2021/02/20/%E5%89%8D%E7%AB%AF%E4%BD%93%E7%B3%BB%E4%B8%8E%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E8%AE%A4%E7%9F%A5/</url>
    <content><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h1><p>本文旨在记录一下我对于前后端分类发展历史进行归纳与总结，有不对的地方，希望能够指出，大家共同进步。本文供我在以后的使用中能够快速学习和参考同时也希望能够给大家带来帮助。</p>
<h1 id="2-概述"><a href="#2-概述" class="headerlink" title="2 概述"></a>2 概述</h1><span id="more"></span>

<p><code>Vue</code>是一套用于构建用户界面的<strong>渐进式框架</strong>，发布于<code>2014年2月</code>。与其他大型框架不同的是，<code>Vue</code>被设计为可以自底层向上逐层应用。**<code>Vue</code>的核心库只关注视图层**，不仅易于上手，还便于与第三方库(如：<code>vue-router:跳转</code>、<code>vue-resource:通信</code>、<code>vuex:管理</code>)或既有项目整合。</p>
<p><code>Vue</code>只负责：<code>HTML+CSS+JS</code></p>
<p>网络通信：<code>axios</code></p>
<p>页面跳转：<code>vue-router</code></p>
<p>状态管理：<code>vuex</code></p>
<p><a href="https://cn.vuejs.org/">官网</a></p>
<p><strong>Vue-ui框架：</strong></p>
<p><a href="https://ice.work/">飞冰</a></p>
<p><a href="https://element.eleme.cn/#/zh-CN">ElementUI</a></p>
<p><a href="https://weapp.iviewui.com/">iView</a></p>
<p><a href="https://iview.github.io/">iview</a></p>
<h1 id="3-前端知识体系"><a href="#3-前端知识体系" class="headerlink" title="3 前端知识体系"></a>3 前端知识体系</h1><p>想要成为真正的”互联网全栈工程师”还有很长的一段路要走，其中”大前端”是 绕不开的一门必修课。本阶段课程的主要目的就是带领我们认识前端、了解前端、掌握前端，为实现称为”全栈工程师”再向前迈进一步。</p>
<h2 id="3-1-前端三要素"><a href="#3-1-前端三要素" class="headerlink" title="3.1 前端三要素"></a>3.1 前端三要素</h2><ol>
<li><code>HTML(结构)：</code>超文本标记语言，决定网页的结构和内容</li>
<li><code>CSS(表现)：</code>层叠样式表，设定网页的表现样式</li>
<li><code>JavaScript(行为)：</code>是一种弱类型脚本语言，其源代码不需经过编译，而是由浏览器解释运行，用于控制网页的行为，网站的交互效果</li>
</ol>
<h2 id="3-2-结构层-HTML"><a href="#3-2-结构层-HTML" class="headerlink" title="3.2 结构层(HTML)"></a>3.2 结构层(HTML)</h2><p>各种标签等…</p>
<h2 id="3-3-表现层-CSS"><a href="#3-3-表现层-CSS" class="headerlink" title="3.3 表现层(CSS)"></a>3.3 表现层(CSS)</h2><p><code>css层叠样式表</code>是一门标记语言，并不是编程语言，因此不可以自定义变量，不可以引用等，换句话说就是不具备任何语法支持，它主要有如下的缺陷：</p>
<ul>
<li>语法不够强大，比如无法嵌套书写，导致模块化开发中需要书写很多重复的选择器。</li>
<li>没有变量和合理的样式复用机制，使得逻辑上相关的属性值必须以字面量的形式重复输出，导致难以维护。</li>
</ul>
<p>这就导致了我们在工作中无端增加了许多工作量。为了解决这个问题，前端开发人员会使用一种称为<strong>CSS预处理器</strong>的工具，提供CSS缺失的样式层复用机制、减少冗余代码，提高样式代码的可维护性。大大提高了前端在样式上的开发效率。</p>
<p><strong>什么是CSS预处理器：</strong></p>
<p>CSS预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为css增加了一些编程的特性，将css作为目标生成文件，然后开发者就只要使用这种语言进行CSS的编码工作。转换成通俗易懂的话来说就是：”<strong>用一种专门的编程语言，进行Web页面样式设计，再通过编译器转化为正常的css文件，以供项目使用。</strong>“</p>
<p><strong>常用的CSS预处理器有：</strong></p>
<ul>
<li><p>**<code>SASS:</code>**基于<code>Ruby</code>开发，通过服务器端处理，功能强大。解析效率高。需要学习<code>Ruby语言</code>，上手难度高于<code>LESS</code>。</p>
</li>
<li><p>**<code>LESS：</code>**基于<code>NodeJS</code>开发，通过客户端处理、使用简单。功能比<code>SASS</code>简单，解析效率也低于<code>SASS</code>，但在实际开发中足够了。</p>
</li>
</ul>
<h2 id="3-4-行为层-JavaScript"><a href="#3-4-行为层-JavaScript" class="headerlink" title="3.4 行为层(JavaScript)"></a>3.4 行为层(<code>JavaScript</code>)</h2><p><code>JavaScript</code>是一门弱类型脚本语言，其源代码在发往客户端运行之前不需经过编译，而是将文本格式的字符代码发送给浏览器，由浏览器解释运行。</p>
<p><strong>Native原生JS开发：</strong></p>
<p>原生JS开发，也就是让我们按照**<code>ECMAScript</code>**标准的开发方式，简称是<code>ES</code>，特点是所有浏览器都支持。目前<code>ES</code>标准已发布如下版本：</p>
<ul>
<li><code>ES3</code></li>
<li><code>ES4</code>：内部未正式发布</li>
<li><code>ES5</code>：全浏览器都支持，目前主流使用</li>
<li><code>ES6</code>：常用，当前主流版本：使用<code>webpack打包成为ES5支持</code></li>
<li><code>ES7</code>：新增了<code>async、await</code>异步函数的处理等</li>
<li><code>ES8</code></li>
<li><code>ES9</code></li>
<li><code>ES10</code></li>
<li><code>ES11</code></li>
</ul>
<p>区别就是逐步增加了新特性。</p>
<h3 id="3-4-1-JavaScript框架"><a href="#3-4-1-JavaScript框架" class="headerlink" title="3.4.1 JavaScript框架"></a>3.4.1 <code>JavaScript框架</code></h3><ul>
<li><code>jQuery：</code>大家熟知的<code>JavaScript</code>框架。优点是简化了<code>DOM</code>的操作。缺点是<code>DOM</code>操作太繁琐，影响前端性能。在前端眼里使用它仅仅是为了兼容<code>IE6、7、8</code>低版本浏览器。</li>
<li><code>Angular</code>：<code>Google</code>收购的前端框架，由一群<code>Java</code>程序员开发，其特点是将后台的<code>MVC</code>模式搬到了前端并增加了<strong>模块化开发</strong>的理念。</li>
<li><code>React</code>：<code>Facebook</code>出品，一款高性能的<code>JavaScript</code>前端框架。特点是提出了新概念**[虚拟DOM]<strong>用于减少真实<code>DOM</code>操作，在内存中模拟<code>DOM</code>操作，有效的提升了前端渲染效率。缺点是使用复杂，因为需要额外学习一门</strong>[<code>JSX</code>]**语言。</li>
<li><code>Vue：</code>一款渐进式<code>JavaScript</code>框架。所谓渐进式就是逐步实现新特性的意思。如实现模块化开发、路由、状态管理等新特性。其特点是综合了<code>Angular(模块化)和React(虚拟DOM)</code>的优点。</li>
<li><code>Axios：</code>前端通信框架。因为<code>Vue</code>的边界很明确，就是为了处理<code>DOM</code>，所以并不具备通信能力，此时就需要额外使用一个通信框架与服务器交互。当然也可以直接选择使用<code>jQuery</code>提供的<code>Ajax</code>通信功能。但是<code>Axios</code>要比<code>jQuery</code>体积更小，运行更快。</li>
</ul>
<h3 id="3-4-2-UI框架"><a href="#3-4-2-UI框架" class="headerlink" title="3.4.2 UI框架"></a>3.4.2 <code>UI框架</code></h3><ul>
<li><code>Ant-Design：</code>阿里巴巴出品，基于<code>React</code>的UI框架</li>
<li><code>ElementUI、iview、ice：</code>饿了么出品，基于<code>Vue</code>的UI框架</li>
<li><code>Bootstrap：``Twitter</code>推出的一个应用于前端开发的开源工具包</li>
<li><code>AmazeUI：</code>又叫”<code>妹子UI</code>“，一款<code>HTML5</code>跨屏前端框架</li>
</ul>
<h3 id="3-4-3-JavaScript构建工具"><a href="#3-4-3-JavaScript构建工具" class="headerlink" title="3.4.3 JavaScript构建工具"></a>3.4.3 <code>JavaScript</code>构建工具</h3><ul>
<li><code>Babel：</code>一种JS编译工具，主要用于浏览器不支持的<code>ES</code>新特性。比如用于编译<code>TypeScript</code></li>
<li><code>WebPack：</code>模块打包器。主要作用是打包、压缩、合并、<code>ES6+</code>转换<code>ES5</code>语法及按序加载</li>
</ul>
<h2 id="3-5-三端统一"><a href="#3-5-三端统一" class="headerlink" title="3.5 三端统一"></a>3.5 三端统一</h2><h3 id="3-5-1-混合开发-Hybrid-App"><a href="#3-5-1-混合开发-Hybrid-App" class="headerlink" title="3.5.1 混合开发(Hybrid App)"></a>3.5.1 混合开发(Hybrid App)</h3><p>主要目的是实现一套代码三端统一（PC、Android：.apk、IOS：.ipa）并能够调用到设备底层硬件（如：传感器、GPS、摄像头等），打包方式主要有以下两种：</p>
<ul>
<li><strong>云打包：</strong><code>HBuild---&gt; HBuildX, DCloud出品：API Cloud</code></li>
<li><strong>本地打包：</strong><code>Cordova</code></li>
</ul>
<h3 id="3-5-2-微信小程序"><a href="#3-5-2-微信小程序" class="headerlink" title="3.5.2 微信小程序"></a>3.5.2 微信小程序</h3><p>详见微信官网，这里就是介绍一个方便微信小程序UI开发的框架：<a href="https://weui.io/">WeUI</a></p>
<h2 id="3-6-后端技术"><a href="#3-6-后端技术" class="headerlink" title="3.6 后端技术"></a>3.6 后端技术</h2><p>前端人员为了方便开发也需要掌握一定的后端技术，但使用<code>Java</code>后台人员知道后台知识体系及其庞大复杂。所以为了方便前端人员开发后台应用，就出现了<code>NodeJS</code>这样的技术。</p>
<p>既然是后台技术，那肯定也需要框架和项目管理器工具，<code>NodeJS</code>框架及项目管理工具如下：</p>
<ul>
<li><code>Express</code>：<code>NodeJS框架</code></li>
<li><code>Koa</code>：<code>Express简化版</code></li>
<li><code>NPM</code>：项目综合管理工具，类似于<code>Java中的Maven</code></li>
<li><code>YARN</code>：<code>NPM的代替方案，</code>类似于<code>Java中的Maven和Gradle的关系</code></li>
</ul>
<h2 id="3-7-Vue中的UI库"><a href="#3-7-Vue中的UI库" class="headerlink" title="3.7 Vue中的UI库"></a>3.7 Vue中的UI库</h2><ol>
<li><a href="https://iview.github.io/">iview</a></li>
</ol>
<p><code>iView</code> 是一套基于 Vue.js 的开源 UI 组件库，主要服务于 PC 界面的中后台产品。主要特点是**<code>移动端</code>**支持较多。</p>
<ol start="2">
<li><a href="https://element.eleme.cn/#/zh-CN">Element-ui</a></li>
</ol>
<p><code>Element</code>是饿了么前端开源维护的<code>VueUI</code>组件库。主要用于<code>PC端</code>的页面开发。</p>
<ol start="3">
<li><a href="https://youzan.github.io/vant/#/zh-CN/">VantUI</a></li>
</ol>
<p><code>Vant UI</code>是有赞前端团队基于有赞统一的规范实现的<code>Vue</code>组件库。提供了一整套UI基础组件和业务组件。通过<code>Vant</code>，可以快速搭建出风格统一的页面，提升开发效率。</p>
<ol start="4">
<li>等等….</li>
</ol>
<h1 id="4-了解前后端分离的演变历史"><a href="#4-了解前后端分离的演变历史" class="headerlink" title="4 了解前后端分离的演变历史"></a>4 了解前后端分离的演变历史</h1><h2 id="4-1-后端为主的MVC时代"><a href="#4-1-后端为主的MVC时代" class="headerlink" title="4.1 后端为主的MVC时代"></a>4.1 后端为主的<code>MVC</code>时代</h2><p><img src="https://z3.ax1x.com/2021/05/31/2ZriO1.png" alt="说明"></p>
<h2 id="4-2-大前端时代-前端为主的MV-时代"><a href="#4-2-大前端时代-前端为主的MV-时代" class="headerlink" title="4.2 大前端时代-前端为主的MV*时代"></a>4.2 大前端时代-前端为主的<code>MV*</code>时代</h2><p>此处的<code>MV*</code>模式如下：</p>
<ul>
<li><code>MVC(同步通信为主)</code>：<code>Model</code>、<code>View</code>、<code>Controller</code></li>
<li><code>MVP(异步通信为主)</code>：<code>Model</code>、<code>View</code>、<code>Presenter</code></li>
<li><code>MVVM(异步通信为主)</code>：<code>Model</code>、<code>View</code>、<code>ViewModel</code></li>
</ul>
<p>为了降低前端开发复杂度，涌现了大量的前端框架，比如：<code>AngularJS</code>、<code>React</code>、<code>Vue.js</code>、<code>EmberJS</code>等，这些框架总的原则是先按类型分层，比如：<code>Templates</code>、<code>Controllers</code>、<code>Models</code>，然后再在层内做切分。如下图：</p>
<p><img src="https://z3.ax1x.com/2021/05/31/2ZrCl9.png" alt="说明"></p>
<p><strong>优点：</strong></p>
<ul>
<li><strong>前后端职责很清晰：</strong>前端工作在浏览器端，后端工作在服务器端。清晰的分工，可以让开发并行，测试数据的模拟不难，前端可以本地开发。后端则可以专注于业务逻辑的处理。</li>
<li><strong>前端开发的复杂度可控：</strong>前端代码很重，但合理的分层，让前端代码能各司其职。</li>
<li><strong>部署相对独立：</strong>可以快速改进产品体验。</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>代码不能复用。比如后端依旧需要对数据做各种校验，校验逻辑无法复用浏览器端的代码。如果可以复用，那么后端的数据校验可以相对简单化。</li>
<li>全异步，对<code>SEO优化</code>不利。往往还需要服务端做同步渲染的降低方案。</li>
<li>性能并非最佳。特别是移动互联网环境下。</li>
<li><code>SPA</code>不能满足所有需求，依旧存在大量多页面应用。</li>
</ul>
<h2 id="4-3-NodeJS带来的全栈时代"><a href="#4-3-NodeJS带来的全栈时代" class="headerlink" title="4.3 NodeJS带来的全栈时代"></a>4.3 <code>NodeJS</code>带来的全栈时代</h2><p>前端为主的<code>MV*</code>模式解决了很多很多问题，但如上所述，依旧存在不少不足之处。随着<code>NodeJS</code>的兴起，<code>JavaScript</code>开始有能力运行在服务器端。这意味着可以有一种新的研发模式：</p>
<p><img src="https://z3.ax1x.com/2021/05/31/2ZrPyR.png" alt="说明"></p>
<p>在这种研发模式下，前后端的职责很清晰。对前端来说，两个<code>UI</code>层各司其职：</p>
<ul>
<li><code>Front-end UI layer</code>处理浏览器层的展现逻辑。通过<code>CSS</code>渲染样式，通过<code>JavaScript</code>添加交互功能，<code>HTML</code>的生成也可以放在这层。</li>
<li><code>Back-end UI layer</code>处理路由、模板、数据获取、<code>Cookie</code>等。通过路由，前端终于可以自主把控<code>URL Design</code>，这样无论是单页面应用还是多页面应用，前端都可以自由调控。后端也终于可以摆脱对展现的强关注，转而可以专心与业务逻辑层的开发。</li>
</ul>
<h2 id="4-4-总结"><a href="#4-4-总结" class="headerlink" title="4.4 总结"></a>4.4 总结</h2><p>综上所述，模式也好，技术也罢，没有好坏优劣之分，只有适合于不适合。前后端分离的开发思想主要是基于<code>SOC</code>(关注度分离原则)，上面种种模式，都是让前后端的职责更清晰，分工更合理高效。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>后端</tag>
      </tags>
  </entry>
</search>
